// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package scaping

import (
	"context"
	"fmt"
)

type ScapingService interface {
	Echo(ctx context.Context, message string) (r string, err error)
}

type ScapingServiceEchoArgs struct {
	Message string `thrift:"message,1" frugal:"1,default,string" json:"message"`
}

func NewScapingServiceEchoArgs() *ScapingServiceEchoArgs {
	return &ScapingServiceEchoArgs{}
}

func (p *ScapingServiceEchoArgs) InitDefault() {
}

func (p *ScapingServiceEchoArgs) GetMessage() (v string) {
	return p.Message
}
func (p *ScapingServiceEchoArgs) SetMessage(val string) {
	p.Message = val
}

func (p *ScapingServiceEchoArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ScapingServiceEchoArgs(%+v)", *p)
}

var fieldIDToName_ScapingServiceEchoArgs = map[int16]string{
	1: "message",
}

type ScapingServiceEchoResult struct {
	Success *string `thrift:"success,0,optional" frugal:"0,optional,string" json:"success,omitempty"`
}

func NewScapingServiceEchoResult() *ScapingServiceEchoResult {
	return &ScapingServiceEchoResult{}
}

func (p *ScapingServiceEchoResult) InitDefault() {
}

var ScapingServiceEchoResult_Success_DEFAULT string

func (p *ScapingServiceEchoResult) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return ScapingServiceEchoResult_Success_DEFAULT
	}
	return *p.Success
}
func (p *ScapingServiceEchoResult) SetSuccess(x interface{}) {
	p.Success = x.(*string)
}

func (p *ScapingServiceEchoResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ScapingServiceEchoResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ScapingServiceEchoResult(%+v)", *p)
}

var fieldIDToName_ScapingServiceEchoResult = map[int16]string{
	0: "success",
}
