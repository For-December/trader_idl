// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package scraping

import (
	"context"
	"fmt"
)

type ScrapingService interface {
	Echo(ctx context.Context, message string) (r string, err error)
}

type ScrapingServiceEchoArgs struct {
	Message string `thrift:"message,1" frugal:"1,default,string" json:"message"`
}

func NewScrapingServiceEchoArgs() *ScrapingServiceEchoArgs {
	return &ScrapingServiceEchoArgs{}
}

func (p *ScrapingServiceEchoArgs) InitDefault() {
}

func (p *ScrapingServiceEchoArgs) GetMessage() (v string) {
	return p.Message
}
func (p *ScrapingServiceEchoArgs) SetMessage(val string) {
	p.Message = val
}

func (p *ScrapingServiceEchoArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ScrapingServiceEchoArgs(%+v)", *p)
}

var fieldIDToName_ScrapingServiceEchoArgs = map[int16]string{
	1: "message",
}

type ScrapingServiceEchoResult struct {
	Success *string `thrift:"success,0,optional" frugal:"0,optional,string" json:"success,omitempty"`
}

func NewScrapingServiceEchoResult() *ScrapingServiceEchoResult {
	return &ScrapingServiceEchoResult{}
}

func (p *ScrapingServiceEchoResult) InitDefault() {
}

var ScrapingServiceEchoResult_Success_DEFAULT string

func (p *ScrapingServiceEchoResult) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return ScrapingServiceEchoResult_Success_DEFAULT
	}
	return *p.Success
}
func (p *ScrapingServiceEchoResult) SetSuccess(x interface{}) {
	p.Success = x.(*string)
}

func (p *ScrapingServiceEchoResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ScrapingServiceEchoResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ScrapingServiceEchoResult(%+v)", *p)
}

var fieldIDToName_ScrapingServiceEchoResult = map[int16]string{
	0: "success",
}
